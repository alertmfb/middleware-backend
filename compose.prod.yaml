services:
  server:
    container_name: middleware-api-prod
    build:
      context: .
    environment:
      NODE_ENV: production
      PORT: ${PORT}
      GLOBAL_PREFIX: ${GLOBAL_PREFIX}
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      INVITE_SECRET: ${INVITE_SECRET}
      TOTP_SECRET: ${TOTP_SECRET}
      REDIS_HOST: middleware-redis
      REDIS_PORT: 6379
      RESEND_API_KEY: ${RESEND_API_KEY}
      ZEPTO_TOKEN: ${ZEPTO_TOKEN}
      ZEPTO_API: ${ZEPTO_API}
    ports:
      - 2424:3000
    depends_on:
      - redis

  database:
    image: postgres
    restart: always
    container_name: middleware-database-prod
    volumes:
      - middleware-database-prod-volume:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    expose:
      - 5432
    ports:
      - 3131:5432

  redis:
    image: redis
    restart: always
    container_name: middleware-redis-prod
    ports:
      - '6565:6379'
    volumes:
      - redis-data:/data

volumes:
  middleware-database-prod-volume:
  redis-data:
# secrets:
#   db-password:
#     file: db/password.txt

